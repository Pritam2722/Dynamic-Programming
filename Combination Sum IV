//leetcode link
//https://leetcode.com/problems/combination-sum-iv/?envType=study-plan-v2&envId=dynamic-programming

class Solution {
private:
    int f(vector<int> &nums, int target, vector<int> &dp){
        if(target==0) return 1;

        if(dp[target]!=-1) return dp[target];

        int ans=0;
        for(int i=0;i<nums.size();i++){
            if(target>=nums[i]) ans += f(nums, target-nums[i], dp);
        }
        return dp[target] = ans;
    }
public:
    int combinationSum4(vector<int>& nums, int target) {
        // Memoization
        vector<int> dp(target+1, -1);
        return f(nums, target, dp);

        // Tabulation
        vector<unsigned int> dp(target+1,0);
        dp[0]=1;
        for(int i=1;i<=target;i++){
            for(int j=0;j<nums.size();j++){
               if(i>=nums[j])
                    dp[i] += dp[i-nums[j]];
            }
        }
        return dp[target];
    }
};
